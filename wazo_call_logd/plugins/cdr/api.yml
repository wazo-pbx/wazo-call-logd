paths:
  /cdr:
    get:
      summary: List CDR
      description: '**Required ACL:** `call-logd.cdr.read`'
      tags:
        - cdr
      parameters:
      - $ref: '#/parameters/from'
      - $ref: '#/parameters/until'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/search'
      - $ref: '#/parameters/call_direction'
      - $ref: '#/parameters/number'
      - $ref: '#/parameters/tags'
      - $ref: '#/parameters/user_uuid'
      - $ref: '#/parameters/from_id'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/distinct'
      responses:
        '200':
          description: List CDR
          schema:
            $ref: '#/definitions/CDRList'
        '400':
          $ref: '#/responses/InvalidRequest'
      produces:
        - application/json
        - text/csv; charset=utf-8
  /cdr/{cdr_id}:
    get:
      summary: Get a CDR by ID
      description: '**Required ACL:** `call-logd.cdr.{cdr_id}.read`'
      tags:
        - cdr
      parameters:
        - $ref: '#/parameters/cdr_id'
      responses:
        '200':
          description: Get a CDR by ID
          schema:
            $ref: '#/definitions/CDR'
        '404':
          $ref: '#/responses/NotFoundError'
      produces:
        - application/json
        - text/csv; charset=utf-8
  /cdr/{cdr_id}/recordings/{recording_uuid}:
    get:
      summary: Get recording metadata
      description: '**Required ACL:** `call-logd.cdr.{cdr_id}.recordings.{recording_uuid}.read`'
      tags:
        - cdr
      parameters:
        - $ref: '#/parameters/cdr_id'
        - $ref: '#/parameters/recording_uuid'
      responses:
        '200':
          description: Get recording metadata
          schema:
            $ref: '#/definitions/recording'
        '404':
          $ref: '#/responses/NotFoundError'
      produces:
        - application/json
  /cdr/{cdr_id}/recordings/{recording_uuid}/media:
    get:
      summary: Get a recording media
      description: '**Required ACL:** `call-logd.cdr.{cdr_id}.recordings.{recording_uuid}.media.read`'
      tags:
        - cdr
      parameters:
        - $ref: '#/parameters/cdr_id'
        - $ref: '#/parameters/recording_uuid'
        - $ref: '#/parameters/force_download'
      responses:
        '200':
          description: Get a recording media
          schema:
            $ref: '#/definitions/recording'
        '404':
          $ref: '#/responses/NotFoundError'
      produces:
      - audio/wav
    delete:
      summary: Delete a recording media
      description: '**Required ACL:** `call-logd.cdr.{cdr_id}.recordings.{recording_uuid}.media.delete`'
      tags:
        - cdr
      parameters:
        - $ref: '#/parameters/cdr_id'
        - $ref: '#/parameters/recording_uuid'
      responses:
        '204':
          description: The recording was deleted successfully
        '404':
          $ref: '#/responses/NotFoundError'
  /users/{user_uuid}/cdr:
    get:
      summary: List CDR of the given user
      description: '**Required ACL:** `call-logd.users.{user_uuid}.cdr.read`'
      tags:
        - cdr
        - users
      parameters:
      -
        name: user_uuid
        description: UUID of the given user
        required: true
        type: string
        in: path
      - $ref: '#/parameters/from'
      - $ref: '#/parameters/until'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/search'
      - $ref: '#/parameters/call_direction'
      - $ref: '#/parameters/number'
      - $ref: '#/parameters/from_id'
      - $ref: '#/parameters/distinct'
      responses:
        '200':
          description: List CDR
          schema:
            $ref: '#/definitions/CDRList'
        '400':
          $ref: '#/responses/InvalidRequest'
      produces:
        - application/json
        - text/csv; charset=utf-8
  /users/me/cdr:
    get:
      summary: List CDR of the authenticated user
      description: '**Required ACL:** `call-logd.users.me.cdr.read`'
      tags:
        - cdr
        - users
      parameters:
      - $ref: '#/parameters/from'
      - $ref: '#/parameters/until'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/search'
      - $ref: '#/parameters/call_direction'
      - $ref: '#/parameters/number'
      - $ref: '#/parameters/from_id'
      - $ref: '#/parameters/user_uuid'
      - $ref: '#/parameters/distinct'
      responses:
        '200':
          description: List CDR
          schema:
            $ref: '#/definitions/CDRList'
        '400':
          $ref: '#/responses/InvalidRequest'
      produces:
        - application/json
        - text/csv; charset=utf-8

parameters:
  from:
    name: from
    description: Ignore CDR starting before the given date. Format is <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO-8601</a>.
    in: query
    type: string
    format: date-time
    required: false
  until:
    name: until
    description: Ignore CDR starting at or after the given date. Format is <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO-8601</a>.
    in: query
    type: string
    format: date-time
    required: false
  limit:
    required: false
    name: limit
    in: query
    type: integer
    description: Maximum number of items to return in the list. Default to 1000 if not specified.
  offset:
    required: false
    name: offset
    in: query
    type: integer
    description: Number of items to skip over in the list. Useful for pagination.
  order:
    required: false
    name: order
    in: query
    type: string
    description: 'Name of the field to use for sorting the list of items returned. Unsupported values: ``end``.'
  direction:
    required: false
    name: direction
    in: query
    type: string
    enum:
    - asc
    - desc
    description: Sort list of items in 'asc' (ascending) or 'desc' (descending) order
  search:
    required: false
    name: search
    in: query
    type: string
    description: Filter list of items
  call_direction:
    required: false
    name: call_direction
    in: query
    type: string
    enum:
    - internal
    - inbound
    - outbound
    description: Filter list of items
  distinct:
    required: false
    name: distinct
    in: query
    type: string
    enum:
      - peer_exten
    description: Will only return one result for the selected field
  number:
    required: false
    name: number
    in: query
    type: string
    description: Filter by source_extension and destination_extension. A wildcard (underscore) can be used at the start and/or the end of the number.
  tags:
    required: false
    name: tags
    in: query
    type: array
    items:
      type: string
    description: Filter by tags. Each tag MUST be separated by a coma (,). Many tag will perform a logical AND.
  user_uuid:
    required: false
    name: user_uuid
    in: query
    type: array
    items:
      type: string
    description: Filter by user_uuid. Many uuid can be specified. Each uuid MUST be separated by a comma (,). Many uuid will perform a logical OR.
  from_id:
    name: from_id
    description: Ignore CDR created before the given CDR ID.
    in: query
    type: integer
    required: false
  cdr_id:
    name: cdr_id
    description: ID of the CDR
    required: true
    type: integer
    in: path
  recording_uuid:
    name: recording_uuid
    description: UUID of the recording
    required: true
    type: integer
    in: path
  force_download:
    name: download
    in: query
    description: Set to 1 to force download by browser
    type: string
definitions:
  CDRList:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/CDR'
      total:
        type: integer
      filtered:
        type: integer
  CDR:
    type: object
    properties:
      id:
        type: integer
      start:
        type: string
        format: date-time
      answer:
        type: string
        format: date-time
      end:
        type: string
        format: date-time
      source_name:
        type: string
      source_extension:
        type: string
      source_internal_extension:
        type: string
        description: the internal extension of the line that placed the call
      source_internal_context:
        type: string
      source_internal_tenant_uuid:
        type: string
      source_user_uuid:
        type: string
      source_tenant_uuid:
        type: string
      source_line_id:
        type: integer
      requested_name:
        type: string
      requested_extension:
        type: string
      requested_context:
        type: string
      requested_tenant_uuid:
        type: string
      requested_internal_extension:
        type: string
        description: the internal extension of the first line to ring
      requested_internal_context:
        type: string
      requested_internal_tenant_uuid:
        type: string
      destination_name:
        type: string
      destination_extension:
        type: string
      destination_internal_extension:
        type: string
        description: the internal extension of the line that answers
      destination_internal_context:
        type: string
      destination_internal_tenant_uuid:
        type: string
      destination_user_uuid:
        type: string
      destination_tenant_uuid:
        type: string
      destination_line_id:
        type: integer
      duration:
        type: integer
        description: Duration of the call, in seconds.
      answered:
        type: boolean
      call_direction:
        type: string
        enum:
        - inbound
        - internal
        - outbound
      tags:
        type: array
        items:
          type: string
      recordings:
        type: array
        items:
          $ref: '#/definitions/recording'
  recording:
    type: object
    properties:
      uuid:
        type: string
      start_time:
        type: string
        format: date-time
      end_time:
        type: string
        format: date-time
      deleted:
        type: boolean
